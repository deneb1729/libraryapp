name: deploy application

on:
  push:
    branches:
      - 'dev'

jobs:

  lint-and-test:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
        - uses: actions/checkout@v2
        - name: set up python 3.7
          uses: actions/setup-python@v2
          with:
            python-version: 3.7
        - name: Lint with flake8
          run: |
            python -m pip install --upgrade pip
            pip install flake8 black
            # -----------------------
            # stop the build if there are Python syntax errors or undefined names
            # -----------------------
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # -----------------------
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            # -----------------------
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            # -----------------------
            # checks with black
            # -----------------------
            black --diff .
        - name: Runing tests
          run: |
            # -----------------------
            # unit test
            # -----------------------
            pip install -r requirements.txt
            python3 manage.py migrate
            python3 manage.py test --settings=base.settings_test -v 3
        - name: Success message
          run: echo finished working successfully!

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a 'django-libraryapp' 'libraryapp-stage'

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a 'django-libraryapp' 'libraryapp-stage'

  deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.4.6
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'django-libraryapp'
          heroku_email: ${{secrets.EMAIL_DEPLOY}}
      - name: Success message
        run: echo Successfully Deploy.!
